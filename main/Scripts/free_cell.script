function init(self)
   self.is_occupied = false
   self.card = nil
   self.dragon_button_trace = nil
   self.slot_id = nil
end

local function check_dragon(card)
   return card.data.value == 'd'
end

local function wo_array(arr, cond)
   tbl = {}
   for key, value in pairs(arr) do
      if cond ~= key then
         table.insert(tbl, value)
      end

   end
   return tbl
end

function change_button_counter(self, num, wo)
   local without_arr = wo or self.dragon_button_trace
   for _, id in pairs(without_arr) do
      msg.post(id, 'change_free_slots_button_counter', {num = num})
   end
end

function send_to_dragon_buttons(self, card, num)
   if check_dragon(card) then
      local url = self.dragon_button_trace[card.data.suit]
      local wo_arr = wo_array(self.dragon_button_trace, card.data.suit)

      --msg.post(url, 'set_dragon_card_pos', {pos = go.get_position()})
      change_button_counter(self, num, wo_arr)
      -- отправить в другие кнопки дракона, что один из фри слотов занят другим цветом
   else
      change_button_counter(self, num)
   end
end

function on_message(self, message_id, message, sender)
   print("MMMMESSSAGE_ID", message_id)
   if message_id == hash("check_slot") then
      if self.is_occupied then
         msg.post(sender, "slot_invalid")
      else
         msg.post(sender, "slot_valid")
      end
   elseif message_id == hash("set_cursor") then
      self.cursor = sender
      self.slot_id = message.slot_id
      self.dragon_button_trace = message.params

   elseif message_id == hash("set_cursor") then
      self.cursor = sender
      self.slot_id = message.slot_id
      self.dragon_button_trace = message.params

   elseif message_id == hash("occupy_slot") then
      self.is_occupied = true
      self.current_card = sender
      message.slot_id = go.get_id()
      self.card_data = message.card
      go.set_position(go.get_position(), sender)
      send_to_dragon_buttons(self, message.card, -1)
   elseif message_id == hash("clear_slot") then
      self.is_occupied = false
      self.current_card = nil
   elseif message_id == hash("remove_card") then
      self.is_occupied = false
      send_to_dragon_buttons(self, self.card_data, 1)
      self.current_card = nil
      self.card_data = nil

   elseif message_id == hash("can_pick_card") then
      if self.is_occupied then
        print("SLOT current card", self.current_card)
        msg.post(sender, "slot_with_card", self.card_data) --id = self.current_card})
      else
      end
   end
end

function update(self, dt)
   -- Преобразуем все объекты в строки и объединяем их
   local debug_string = "current_card: " .. tostring(self.current_card) .. "\n"


   local color_green = vmath.vector4(1, 0, 0, 1)
   msg.post("@render:", "draw_debug_text", { text = debug_string, position = vmath.vector3(1300, 780, 0), color = color_green })


end
