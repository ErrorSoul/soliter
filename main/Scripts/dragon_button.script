function init(self)
   self.sprite = nil
   self.default_sprite = 'grey'
   self.is_active = nil
   self.counter = 0
   self.free_slot_pos = nil
   self.cards = {}
   self.free_slots_counter = 3
   self.cursor = nil
   self.slot_it = nil
end

function on_message(self, message_id, message, sender)
   if message_id == hash("set_button") then
      self.is_active = message.data.is_active
      self.sprite = message.data.sprite
      self.cursor = message.cursor
      self.slot_id = message.slot_id
   elseif message_id == hash("send_counter_to_button") then
      self.counter = self.counter + 1
      table.insert(self.cards, message)
      check_state(self)
   elseif message_id == hash("get_dragon_cards") then
      msg.post(self.cursor, 'get_dragon_cards', self.cards)
      if self.sprite == 'green' then
         pprint("STATE", self.counter, free_slot_any(self), self.counter == 4 and free_slot_any(self) )
      end
   -- elseif message_id == hash("set_dragon_card_pos") then
   --    self.free_slot_pos = message.pos
   --    pprint("DRAGON POS", self.free_slot_pos)
   --    check_state(self)
   -- elseif message_id == hash("set_dragon_card_pos") then
   --    self.free_slot_pos = message.pos
   --    pprint("DRAGON POS", self.free_slot_pos)
   --    check_state(self)
   elseif message_id == hash("change_free_slots_button_counter") then
      self.free_slots_counter = self.free_slots_counter + message.num
      if self.sprite == 'green' then
         pprint("COUNTER", self.free_slots_counter)
      end

      check_state(self)
   end
end


function check_state(self)
   if self.counter == 4 and free_slot_any(self) then
      msg.post("#sprite", "play_animation", {id = hash("button" .. "_" .. self.sprite)})
      msg.post(self.cursor, 'set_button_state', {slot_id = self.slot_id, is_active = true})
   else
      msg.post("#sprite", "play_animation", {id = hash("button" .. "_" .. self.default_sprite)})
      msg.post(self.cursor, 'set_button_state', {slot_id = self.slot_id, is_active = false})
   end
end

function free_slot_any(self)
   --return self.free_slot_pos or self.free_slots_counter > 0
   return self.free_slots_counter > 0
end
